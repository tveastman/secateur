version: "3.7"
volumes:
  postgres:
  redis:
networks:
  secateur:
services:
  app:
    build: .
    image: secateur
    env_file:
      - /etc/secateur/environment
    environment:
      - PGAPPNAME=app
    command: >
      sh -c "./manage.py migrate &&
      gunicorn -b 0.0.0.0:5000 -k gevent --log-file=- --log-level info
      --access-logfile - --capture-output secateur.wsgi"
    ports:
      - "5000:5000"
    depends_on:
      - redis
      - postgres
    networks:
      secateur:
    init: true
    read_only: true
    tmpfs:
      - /tmp
    restart: always
    logging:
      driver: journald
  beat:
    build: .
    image: secateur
    env_file:
      - /etc/secateur/environment
    environment:
      - DJANGO_SETTINGS_MODULE=secateur.settings
      - PGAPPNAME=beat
#      - C_REMDEBUG=True
    command: >
      nice timeout 864000 celery -A secateur beat
      -l DEBUG
      --scheduler django_celery_beat.schedulers:DatabaseScheduler
    depends_on:
      - redis
      - postgres
    networks:
      secateur:
    init: true
    read_only: true
    tmpfs:
      - /tmp
    restart: always
    logging:
      driver: journald
  celery:
    build: .
    image: secateur
    env_file:
      - /etc/secateur/environment
    environment:
      - DJANGO_SETTINGS_MODULE=secateur.settings
      - PGAPPNAME=celery
    command: >
      nice timeout 86400 celery -A secateur worker
      --without-gossip --without-mingle --without-heartbeat
      -l info
      --pool gevent --concurrency 2
    depends_on:
      - redis
      - postgres
    networks:
      secateur:
    init: true
    read_only: true
    tmpfs:
      - /tmp
    restart: always
    logging:
      driver: journald
  blocker:
    build: .
    image: secateur
    env_file:
      - /etc/secateur/environment
    environment:
      - DJANGO_SETTINGS_MODULE=secateur.settings
      - PGAPPNAME=blocker
    command: >
      nice timeout 86400 celery -A secateur worker -Q blocker -l info
      --without-gossip --without-mingle --without-heartbeat
      --prefetch-multiplier 150
      --pool gevent
      --concurrency 6
    depends_on:
      - redis
      - postgres
    networks:
      secateur:
    init: true
    read_only: true
    tmpfs:
      - /tmp
    restart: always
    logging:
      driver: journald
  postgres:
    image: postgres:13
    command: >
      postgres
      -c 'shared_buffers=256MB'
      -c 'synchronous_commit=off'
      -c "max_wal_senders=0"
      -c "wal_level=minimal"
      -c 'wal_writer_delay=5000'
      -c 'wal_writer_flush_after=5MB'
      -c 'log_min_duration_statement=200'
      -c 'autovacuum_vacuum_scale_factor=0.01'
      -c 'bgwriter_lru_maxpages=2000'
      -c 'bgwriter_delay=1000ms'
      -c 'bgwriter_flush_after=2MB'
      -c 'bgwriter_lru_multiplier=4.0'
      -c 'idle_in_transaction_session_timeout=300s'
    env_file:
      - /etc/secateur/environment
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      secateur:
    init: true
    read_only: true
    shm_size: 128M
    tmpfs:
      - /run/
      - /tmp/
    restart: always
    logging:
      driver: journald
    ports:
      - "127.0.0.1:5433:5432"
  redis:
    image: redis:6
    volumes:
      - redis:/data
    networks:
      secateur:
    init: true
    read_only: true
    restart: always
    command: redis-server redis.conf
    logging:
      driver: journald
